@using Microsoft.AspNetCore.Identity
@inject UserManager<ManutationItemsApp.Domain.Entities.ApplicationUser> UserManager
@inject SignInManager<ManutationItemsApp.Domain.Entities.ApplicationUser> SignInManager
@{
    if (SignInManager.IsSignedIn(User))
    {
        var user = UserManager.FindByNameAsync(User.Identity.Name);
    }
}
@{
    ViewData["Title"] = "Home Page";
}

<div class="loader" id="AjaxLoader" style="display:none;">
    <button class="btn btn-primary" type="button" disabled>
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        Loading...
    </button>
</div>

<div id="partialViewDiv">


    @if (SignInManager.IsSignedIn(User))
    {
    <div class="container-fluid">
        <div class="d-flex   bg-secondary text-white flex-wrap-reverse">


            <div class="p-4 bg-warning">

                @await Component.InvokeAsync("Button", new { buttonText = "Le mie attività", roleId = ViewBag.roleId, data = Model }) @await Component.InvokeAsync("NotificationsCounter")
            </div>

            <div class="p-4 bg-success">

                @await Component.InvokeAsync("Button", new { buttonText = "Asset", roleId = ViewBag.roleId, data = Model })
            </div>
            <div class="p-4 bg-primary">

                @await Component.InvokeAsync("Button", new { buttonText = "Items", roleId = ViewBag.roleId, data = Model })
            </div>
        </div>
            <div class="d-flex p-2 flex-row bg-secondary justify-content-end flex-wrap-reverse">
                <div class="p-4 bg-success">

                    @await Component.InvokeAsync("Button", new { buttonText = "Utenti", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-4 bg-info">

                    @await Component.InvokeAsync("Button", new { buttonText = "Fornitori", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-4 bg-gray">

                    @await Component.InvokeAsync("Button", new { buttonText = "Outsourcer", roleId = ViewBag.roleId, data = Model })
                </div>
            </div>
        

            <div class="d-flex p-4 bg-gray text-white">
                <div class="p-2 bg-danger">

                    @await Component.InvokeAsync("Button", new { buttonText = "Nuova Richiesta", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-2 bg-success">

                    @await Component.InvokeAsync("Button", new { buttonText = "Preventiva", roleId = ViewBag.roleId, data = Model })

                </div>
                <div class="p-2 bg-light">
                    @await Component.InvokeAsync("Button", new { buttonText = "Pulizie", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-2 bg-primary">
                    @await Component.InvokeAsync("Button", new { buttonText = "Predittiva", roleId = ViewBag.roleId, data = Model })
                </div>
            </div>

            <div class="d-flex  flex bg-gray justify-content-end">
                <div class="p-4 bg-warning">

                    @await Component.InvokeAsync("Button", new { buttonText = "Parti di ricambio - Materiali di consumo", roleId = ViewBag.roleId, data = Model })

                </div>
                <div class="p-4 bg-info">
                    @await Component.InvokeAsync("Button", new { buttonText = "Attrezzature", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-4 bg-primary">
                    @await Component.InvokeAsync("Button", new { buttonText = "Strumenti", roleId = ViewBag.roleId, data = Model })
                </div>
            </div>

            <div class="d-flex p-4 flex-row bg-secondary justify-content-start flex-wrap-reverse">

                <div class="p-3 bg-primary">
                    @await Component.InvokeAsync("Button", new { buttonText = "Kpi", roleId = ViewBag.roleId, data = Model })
                </div>

                <div class="p-3 bg-success">
                    @await Component.InvokeAsync("Button", new { buttonText = "Audit", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-3 bg-warning">
                    @await Component.InvokeAsync("Button", new { buttonText = "Management Review", roleId = ViewBag.roleId, data = Model })
                </div>

            </div>

            <div class="d-flex  flex-row-reverse bg-secondary">
                <div class="p-5 bg-primary">
                    @await Component.InvokeAsync("Button", new { buttonText = "Master Action Plan", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="p-5 bg-success">

                    @await Component.InvokeAsync("Button", new { buttonText = "Calendario", roleId = ViewBag.roleId, data = Model })
                </div>

            </div>
        </div>

        }
    </div>


