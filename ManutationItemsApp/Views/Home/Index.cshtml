@using Microsoft.AspNetCore.Identity
@inject UserManager<ManutationItemsApp.Domain.Entities.ApplicationUser> UserManager
@inject SignInManager<ManutationItemsApp.Domain.Entities.ApplicationUser> SignInManager
@{
    if (SignInManager.IsSignedIn(User))
    {
        var user = UserManager.FindByNameAsync(User.Identity.Name);
    }
}
@{
    ViewData["Title"] = "Home Page";
}

<div class="loader" id="AjaxLoader" style="display:none;">
    <button class="btn btn-primary" type="button" disabled>
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        Loading...
    </button>
</div>

<div id="partialViewDiv">


    @if (SignInManager.IsSignedIn(User))
    {
    <div class="row p-3 border">

        <div class="col-12 border-bottom">

            @await Component.InvokeAsync("Button", new { buttonText = "Le mie attività", roleId = ViewBag.roleId, data = Model }) @await Component.InvokeAsync("NotificationsCounter")
        </div>

        <div class="col-8 offset-4">
            <div class="row">
                <div class="col-2">
                    @await Component.InvokeAsync("Button", new { buttonText = "Asset", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-2">
                    @await Component.InvokeAsync("Button", new { buttonText = "Items", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-2">
                    @await Component.InvokeAsync("Button", new { buttonText = "Utenti", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-2">
                    @await Component.InvokeAsync("Button", new { buttonText = "Fornitori", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-2">
                    @await Component.InvokeAsync("Button", new { buttonText = "Outsourcer", roleId = ViewBag.roleId, data = Model })
                </div>
            </div>
           </div>
        

        <div class="col-8 offset-4">
            
                @await Component.InvokeAsync("Button", new { buttonText = "Calendario", roleId = ViewBag.roleId, data = Model })
            </div>
        <div class="col-8 offset-4">
            <div class="row">
                <div class="col-3">

                    @await Component.InvokeAsync("Button", new { buttonText = "Nuova Richiesta", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-3">
                    @await Component.InvokeAsync("Button", new { buttonText = "Preventiva", roleId = ViewBag.roleId, data = Model })

                </div>
                <div class="col-3">
                    @await Component.InvokeAsync("Button", new { buttonText = "Pulizie", roleId = ViewBag.roleId, data = Model })
                </div>
                <div class="col-3">
                    @await Component.InvokeAsync("Button", new { buttonText = "Predittiva", roleId = ViewBag.roleId, data = Model })
                </div>
            </div>


            </div>

            <div class="col-8 offset-4">
                <div class="row">
                    <div class="col-6">

                        @await Component.InvokeAsync("Button", new { buttonText = "Parti di ricambio - Materiali di consumo", roleId = ViewBag.roleId, data = Model })

                    </div>
                    <div class="col-3">
                        @await Component.InvokeAsync("Button", new { buttonText = "Attrezzature", roleId = ViewBag.roleId, data = Model })
                    </div>
                    <div class="col-3">
                        @await Component.InvokeAsync("Button", new { buttonText = "Strumenti", roleId = ViewBag.roleId, data = Model })
                    </div>
                </div>
            </div>


            <div class="col-8 offset-4">
                <div class="row">
                    <div class="col-2">
                        @await Component.InvokeAsync("Button", new { buttonText = "Kpi", roleId = ViewBag.roleId, data = Model })
                    </div>

                    <div class="col-3">
                        @await Component.InvokeAsync("Button", new { buttonText = "Audit", roleId = ViewBag.roleId, data = Model })
                    </div>
                    <div class="col-4">
                        @await Component.InvokeAsync("Button", new { buttonText = "Management Review", roleId = ViewBag.roleId, data = Model })
                    </div>
                </div>
            </div>

            <div class="col-8 offset-4">
                @await Component.InvokeAsync("Button", new { buttonText = "Master Action Plan", roleId = ViewBag.roleId, data = Model })
            </div>

        </div>
    
            }
     </div>



